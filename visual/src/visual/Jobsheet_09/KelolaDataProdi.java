/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package visual.Jobsheet_09;

import com.mysql.cj.jdbc.Driver;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import visual.Jobsheet_08.latihan;

/**
 *
 * @author erdia
 */
public class KelolaDataProdi extends javax.swing.JDialog {

    /**
     * Creates new form KelolaData
     */
    public KelolaDataProdi(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

    }
    boolean modeSimpan = true;
    Jurusan jurusan1 = new Jurusan(new javax.swing.JFrame(), true);

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        name_prodi = new javax.swing.JTextField();
        kode_prodi = new javax.swing.JTextField();
        baru = new javax.swing.JButton();
        save = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        singkatan = new javax.swing.JTextField();
        jurusan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pilih = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Program Studi");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel2.setText("Kode Prodi");

        jLabel3.setText("Nama Prodi");

        name_prodi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                name_prodiKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                name_prodiKeyTyped(evt);
            }
        });

        kode_prodi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                kode_prodiKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                kode_prodiKeyTyped(evt);
            }
        });

        baru.setText("Baru");
        baru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baruActionPerformed(evt);
            }
        });

        save.setText("Simpan");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        cancel.setText("Batal");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        delete.setText("Hapus");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        edit.setText("Ubah");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Prodi", "Nama Program Studi", "Singkatan", "Kode Jurusan", "Jurusan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabel.setEditingColumn(0);
        tabel.setEditingRow(0);
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        singkatan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                singkatanKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                singkatanKeyTyped(evt);
            }
        });

        jLabel4.setText("Jurusan");

        jLabel5.setText("Singkatan");

        pilih.setText("Pilih Jurusan");
        pilih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pilihActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("Tekan enter untuk melanjutkan");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addComponent(jLabel2))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(baru)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(kode_prodi, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(singkatan, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jurusan, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pilih))
                        .addComponent(name_prodi, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(296, 296, 296))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(kode_prodi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(name_prodi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(singkatan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jurusan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(pilih))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(baru)
                    .addComponent(delete)
                    .addComponent(edit)
                    .addComponent(save)
                    .addComponent(cancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(51, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Kelola Data Program Studi");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(175, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(155, 155, 155))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(549, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean regDriver() {
        try {
            DriverManager.registerDriver(new Driver());
            return true;
        } catch (SQLException e) {
            System.out.println(e);
            return false;
        }
    }

    private Connection setConnection() throws SQLException {
        regDriver();
        String url = "jdbc:mysql://localhost:3306/polnep";
        String user = "root";
        String passwd = "";
        return DriverManager.getConnection(url, user, passwd);
    }

    private void Read() {
        DefaultTableModel model = (DefaultTableModel) tabel.getModel();
        try {
            Statement stm = setConnection().createStatement();
            ResultSet rs = stm.executeQuery("select prodi.kode_prodi, prodi.nama_prodi, prodi.singkatan, jurusan.kode_jurusan, jurusan.nama_jurusan from prodi inner join jurusan on prodi.kode_jurusan=jurusan.kode_jurusan");
            ResultSetMetaData rsmt = rs.getMetaData();
            model.setRowCount(0);
            model.fireTableDataChanged();
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(rsmt.getColumnName(1)),
                    rs.getString(rsmt.getColumnName(2)),
                    rs.getString(rsmt.getColumnName(3)),
                    rs.getString(rsmt.getColumnName(4)),
                    rs.getString(rsmt.getColumnName(5))});
            }
        } catch (SQLException ex) {
            Logger.getLogger(latihan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean Search(String param, String kode) {
        try {
            Statement stm = setConnection().createStatement();
            ResultSet rs = stm.executeQuery("select " + param + " from prodi where " + param + " = '" + kode + "'");
            if (rs.next()) {
                return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(latihan.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    private void baruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baruActionPerformed
        name_prodi.setEnabled(false);
        kode_prodi.setEnabled(true);
        singkatan.setEnabled(false);
        jurusan.setEnabled(false);
        jurusan.setEditable(false);
        kode_prodi.requestFocus();
        baru.setEnabled(false);
        pilih.setEnabled(false);
        save.setEnabled(true);
        edit.setEnabled(false);
        delete.setEnabled(false);
        cancel.setEnabled(true);
        modeSimpan = true;
    }//GEN-LAST:event_baruActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if (kode_prodi.getText().equals("")) {
            JOptionPane.showMessageDialog(
                    this,
                    "kode prodi tidak boleh kosong!", // isi pesan
                    "Informasi", // judul pesan
                    JOptionPane.INFORMATION_MESSAGE
            );
            kode_prodi.requestFocus();
        } else if (name_prodi.getText().equals("")) {
            JOptionPane.showMessageDialog(
                    this,
                    "Nama tidak boleh kosong!", // isi pesan
                    "Informasi", // judul pesan
                    JOptionPane.INFORMATION_MESSAGE
            );
            name_prodi.requestFocus();
        } else if (singkatan.getText().equals("")) {
            JOptionPane.showMessageDialog(
                    this,
                    "singkatan tidak boleh kosong!", // isi pesan
                    "Informasi", // judul pesan
                    JOptionPane.INFORMATION_MESSAGE
            );
            singkatan.requestFocus();
        } else {
            if (modeSimpan == true) { // save
                try {
                    String kode_jurusan = String.valueOf(jurusan1.GetJurusan());
                    PreparedStatement prpr = setConnection().prepareStatement("insert into prodi values(?,?,?,?)");
                    prpr.setString(1, kode_prodi.getText());
                    prpr.setString(2, name_prodi.getText());
                    prpr.setString(3, singkatan.getText());
                    prpr.setString(4, kode_jurusan);
                    var i = prpr.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(latihan.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else { // update
                try {
                    String kode_jurusan = String.valueOf(jurusan1.GetJurusan());
                    PreparedStatement prpr = setConnection().prepareStatement("update prodi set nama_prodi = ?, singkatan = ?, kode_jurusan = ? where kode_prodi = ?");
                    prpr.setString(1, name_prodi.getText());
                    prpr.setString(2, singkatan.getText());
                    prpr.setString(3, kode_jurusan);
                    prpr.setString(4, kode_prodi.getText());
                    var i = prpr.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(latihan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            cancelActionPerformed(evt);
            Read();
        }
    }//GEN-LAST:event_saveActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        name_prodi.setText("");
        kode_prodi.setText("");
        singkatan.setText("");
        jurusan.setText("");
        name_prodi.setEnabled(false);
        kode_prodi.setEnabled(false);
        singkatan.setEnabled(false);
        jurusan.setEnabled(false);
        pilih.setEnabled(false);
        baru.setEnabled(true);
        save.setEnabled(false);
        edit.setEnabled(false);
        delete.setEnabled(false);
        cancel.setEnabled(false);
        baru.requestFocus();
    }//GEN-LAST:event_cancelActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if (tabel.getSelectedRow() == -1) {
            // Jika tidak ada baris dari jTable1 yang terpilih (terseleksi)
            JOptionPane.showMessageDialog(
                    this,
                    "Silahkan pilih salah satu baris yang akan dihapus!",
                    "Informasi",
                    JOptionPane.INFORMATION_MESSAGE
            );
        } else {
            int pilihan = JOptionPane.showConfirmDialog(
                    this,
                    "Apakah yakin akan menghapus data?",
                    "Konfirmasi",
                    JOptionPane.YES_NO_OPTION
            );
            if (pilihan == 0) {
                try {
                    PreparedStatement prpr = setConnection().prepareStatement("delete from prodi where kode_prodi = ?");
                    prpr.setString(1, kode_prodi.getText());
                    var i = prpr.executeUpdate();
                    Read();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Data prodi Digunakan di Tabel lain");
                }
                cancelActionPerformed(evt);
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        name_prodi.setEnabled(true);
        kode_prodi.setEnabled(false);
        name_prodi.requestFocus();
        singkatan.setEnabled(true);
        jurusan.setEnabled(true);
        jurusan.setEditable(false);
        pilih.setEnabled(true);
        baru.setEnabled(false);
        save.setEnabled(true);
        edit.setEnabled(false);
        delete.setEnabled(false);
        cancel.setEnabled(true);
        modeSimpan = false;
    }//GEN-LAST:event_editActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        if (tabel.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(
                    this,
                    "Silahkan pilih salah satu baris yang diinginkan!",
                    "Informasi",
                    JOptionPane.INFORMATION_MESSAGE
            );
        } else {
            kode_prodi.setText(tabel.getValueAt(tabel.getSelectedRow(), 0).toString());
            name_prodi.setText(tabel.getValueAt(tabel.getSelectedRow(), 1).toString());
            singkatan.setText(tabel.getValueAt(tabel.getSelectedRow(), 2).toString());
            jurusan.setText(tabel.getValueAt(tabel.getSelectedRow(), 4).toString());
            name_prodi.setEnabled(false);
            kode_prodi.setEnabled(false);
            singkatan.setEnabled(false);
            jurusan.setEnabled(false);
            baru.setEnabled(false);
            save.setEnabled(false);
            edit.setEnabled(true);
            delete.setEnabled(true);
            cancel.setEnabled(true);
            edit.requestFocus();
        }
    }//GEN-LAST:event_tabelMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Read();
//        jLabel6.
        pilih.setEnabled(false);
        name_prodi.setEnabled(false);
        kode_prodi.setEnabled(false);
        singkatan.setEnabled(false);
        jurusan.setEnabled(false);
        pilih.setEnabled(false);
        save.setEnabled(false);
        edit.setEnabled(false);
        delete.setEnabled(false);
        cancel.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void kode_prodiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kode_prodiKeyReleased
        boolean dupe;
        String parameter = "kode_prodi";
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            dupe = Search(parameter, kode_prodi.getText());
            if (dupe == true) {
                int pilihan;
                pilihan = JOptionPane.showConfirmDialog(
                        this,
                        "Kode prodi " + kode_prodi.getText() + " sudah ada! "
                        + "Apakah anda ingin mengubah/menghapus data?",
                        "Konfirmasi",
                        JOptionPane.YES_NO_OPTION
                );
                if (pilihan == 0) {
                    try {
                        Statement stm = setConnection().createStatement();
//                        ResultSet rs = stm.executeQuery("select * from prodi where kode_prodi =" + kode_prodi.getText());
                        ResultSet rs = stm.executeQuery("select prodi.kode_prodi, prodi.nama_prodi, prodi.singkatan,jurusan.nama_jurusan from prodi inner join jurusan on prodi.kode_jurusan=jurusan.kode_jurusan where prodi.kode_prodi ="+kode_prodi.getText());
                        ResultSetMetaData rsmt = rs.getMetaData();
                        while (rs.next()) {
                            kode_prodi.setText(rs.getString(rsmt.getColumnName(1)));
                            name_prodi.setText(rs.getString(rsmt.getColumnName(2)));
                            singkatan.setText(rs.getString(rsmt.getColumnName(3)));
                            jurusan.setText(rs.getString(rsmt.getColumnName(4)));
                        }
                        singkatan.setEnabled(false);
                        name_prodi.setEnabled(false);
                        kode_prodi.setEnabled(false);
                        jurusan.setEnabled(false);
                        pilih.setEnabled(false);
                        baru.setEnabled(false);
                        save.setEnabled(false);
                        edit.setEnabled(true);
                        delete.setEnabled(true);
                        cancel.setEnabled(true);
                        edit.requestFocus();
                        modeSimpan = false;
                    } catch (SQLException e) {
                        System.err.println("Query error");
                    }
                } else {
                    kode_prodi.setText("");
                    kode_prodi.requestFocus();
                }
            } else {
                name_prodi.setEnabled(true);
                singkatan.setEnabled(true);
                pilih.setEnabled(true);
                jurusan.setEnabled(true);
                name_prodi.requestFocus();
                save.setEnabled(true);
            }
        }
    }//GEN-LAST:event_kode_prodiKeyReleased

    private void pilihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pilihActionPerformed
        jurusan1.setVisible(true);
        try {
            Statement stm = setConnection().createStatement();
            ResultSet rs = stm.executeQuery("select nama_jurusan from jurusan where kode_jurusan =" + jurusan1.GetJurusan());
            ResultSetMetaData rsmt = rs.getMetaData();
            while (rs.next()) {
                jurusan.setText(rs.getString(rsmt.getColumnName(1)));
            }
        } catch (SQLException e) {
            System.err.println("Query error");
        }
    }//GEN-LAST:event_pilihActionPerformed

    private void name_prodiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name_prodiKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            singkatan.setEnabled(true);
            singkatan.requestFocus();
            save.setEnabled(true);
        }
    }//GEN-LAST:event_name_prodiKeyReleased

    private void singkatanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_singkatanKeyReleased
        boolean dupe;
        String parameter = "singkatan";
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            dupe = Search(parameter, singkatan.getText());
            if (dupe == true) {
                int pilihan;
                pilihan = JOptionPane.showConfirmDialog(
                        this,
                        "singkatan prodi " + kode_prodi.getText() + " sudah ada! "
                        + "Apakah anda ingin mengubah/menghapus data?",
                        "Konfirmasi",
                        JOptionPane.YES_NO_OPTION
                );
                if (pilihan == 0) {
                    try {
                        Statement stm = setConnection().createStatement();
                        ResultSet rs = stm.executeQuery("select * from prodi where singkatan =" + singkatan.getText());
                        ResultSetMetaData rsmt = rs.getMetaData();
                        while (rs.next()) {
                            kode_prodi.setText(rs.getString(rsmt.getColumnName(1)));
                            name_prodi.setText(rs.getString(rsmt.getColumnName(2)));
                            singkatan.setText(rs.getString(rsmt.getColumnName(3)));
                            jurusan.setText(rs.getString(rsmt.getColumnName(4)));
                        }
                        singkatan.setEnabled(true);
                        name_prodi.setEnabled(true);
                        kode_prodi.setEnabled(true);
                        kode_prodi.requestFocus();
                        baru.setEnabled(false);
                        save.setEnabled(true);
                        edit.setEnabled(false);
                        delete.setEnabled(false);
                        cancel.setEnabled(true);
                        modeSimpan = false;
                    } catch (SQLException e) {
                        System.err.println("Query error");
                    }
                } else {
                    singkatan.requestFocus();
                }
            } else {
                save.setEnabled(true);
            }
        }
    }//GEN-LAST:event_singkatanKeyReleased

    private void kode_prodiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kode_prodiKeyTyped
        if (kode_prodi.getText().length() >= 5) {
            evt.consume();
        }
    }//GEN-LAST:event_kode_prodiKeyTyped

    private void name_prodiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name_prodiKeyTyped
        if (name_prodi.getText().length() >= 100) {
            evt.consume();
        }
    }//GEN-LAST:event_name_prodiKeyTyped

    private void singkatanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_singkatanKeyTyped
        if (singkatan.getText().length() >= 3) {
            evt.consume();
        }
    }//GEN-LAST:event_singkatanKeyTyped

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(KelolaDataProdi.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(KelolaDataProdi.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(KelolaDataProdi.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(KelolaDataProdi.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                KelolaDataProdi dialog = new KelolaDataProdi(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton baru;
    private javax.swing.JButton cancel;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jurusan;
    private javax.swing.JTextField kode_prodi;
    private javax.swing.JTextField name_prodi;
    private javax.swing.JButton pilih;
    private javax.swing.JButton save;
    private javax.swing.JTextField singkatan;
    private javax.swing.JTable tabel;
    // End of variables declaration//GEN-END:variables
}
